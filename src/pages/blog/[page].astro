---
import { render } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Prose from "../../components/Prose.astro";
import {
  getCollectionOrderByDate,
  getWordCount,
  titleToPinyin,
} from "../../utils/utils";

export const getStaticPaths = async () => {
  const blogs = await getCollectionOrderByDate("blog", ({ data }) => {
    return data.published === true;
  });
  return blogs.map((item) => ({
    params: {
      page: titleToPinyin(item.data.title),
    },
    props: {
      title: item.data.title,
      description: item.data.description,
      date: item.data.date,
      tags: item.data.tags,
      fontNum: getWordCount(item.body ? item.body : ""),
      Content: item,
    },
  }));
};

const {
  title,
  description,
  date,
  fontNum,
  Content: rawContent,
  tags,
} = Astro.props;
const { Content } = await render(rawContent);
const MIN_READ_COUNT = 350;
const readTimeMin = Math.ceil(fontNum / MIN_READ_COUNT);
---

<BaseLayout description={description} keywords={tags}>
  <div class="blog-head">
    <h1 class="title">{title}</h1>
    <p class="description">{description}</p>
    <div class="other-info">
      <p class="date"><em>{date}</em></p>
      <p class="read-time"><em>{readTimeMin}</em> 分钟 阅读</p>
    </div>
  </div>

  <Prose>
    <Content />
  </Prose>
</BaseLayout>

<style>
  em {
    font-style: normal;
  }

  .blog-head {
    padding-bottom: 50px;
  }

  .blog-head > * {
    line-height: 50px;
  }

  .other-info > * {
    line-height: 20px;
  }

  .title {
    font-size: 2rem;
  }

  .description {
    font-weight: lighter;
    font-size: 1.3rem;
  }
  .other-info {
    font-size: 0.9rem;
  }

  .blog-head .description {
    color: #808080;
  }

  .blog-head .other-info p {
    color: #808080;
  }
</style>
